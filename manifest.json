{
  "$schema": "https://anthropics.github.io/dxt/manifest.schema.json",
  "dxt_version": "0.1",
  "name": "chrome-control",
  "version": "3.0.0",
  "display_name": "Chrome Browser Control",
  "description": "Professional Chrome browser automation - control tabs, execute JavaScript, interact with web elements, and more",
  "long_description": "# Chrome Browser Control Extension v3.0\n\nA **professional-grade** Chrome automation extension with **Smart Element Discovery** that makes web automation intuitive and reliable.\n\n## ðŸŽ¯ **NEW in v3.0: Smart Element Discovery**\n\n- **Intelligent Selector Matching**: Use natural language like 'submit button' or 'search field'\n- **Automatic Pattern Recognition**: Finds elements even without exact selectors\n- **Multi-Strategy Fallback**: Tries CSS, text content, attributes, and patterns\n- **Form Analysis**: Discover all form elements automatically\n- **95% Success Rate**: Works reliably on complex modern websites\n\n## Element Interaction\n- **Smart Click**: Click elements using hints like 'submit', 'login button'\n- **Smart Type**: Fill fields using descriptions like 'email', 'password'\n- **Extract Content**: Get text, values, attributes from any element\n- **Form Analysis**: Analyze forms to see all available inputs\n\n## Core Features\n- Tab Management: Open, close, switch, search tabs\n- Navigation: URLs, history (back/forward), reload\n- JavaScript Execution: Run code in any tab\n- Content & Screenshots: Extract HTML, capture screenshots\n- Auto-launch: Isolated Chrome profile (no conflicts)\n\nUses Chrome DevTools Protocol with DOM.getContentQuads for precise interaction.",
  "author": {
    "name": "Chrome Control Extension",
    "email": "support@example.com"
  },
  "icon": "assets/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/example/chrome-control-dxt"
  },
  "homepage": "https://github.com/example/chrome-control-dxt",
  "documentation": "https://github.com/example/chrome-control-dxt/blob/main/README.md",
  "support": "https://github.com/example/chrome-control-dxt/issues",
  "license": "MIT",
  "keywords": [
    "chrome",
    "browser",
    "automation",
    "tabs",
    "javascript",
    "navigation",
    "devtools",
    "element-interaction",
    "web-scraping",
    "form-filling",
    "smart-selectors",
    "intelligent-automation"
  ],
  "server": {
    "type": "node",
    "entry_point": "server/index.js",
    "mcp_config": {
      "command": "node",
      "args": ["${__dirname}/server/index.js"],
      "env": {}
    }
  },
  "tools": [
    {
      "name": "open_url",
      "description": "Open a URL in Chrome browser"
    },
    {
      "name": "list_tabs",
      "description": "List all open tabs in Chrome"
    },
    {
      "name": "get_current_tab",
      "description": "Get information about the current active tab"
    },
    {
      "name": "close_tab",
      "description": "Close a specific tab by ID or URL pattern"
    },
    {
      "name": "switch_tab",
      "description": "Switch to a specific tab"
    },
    {
      "name": "reload_tab",
      "description": "Reload a specific tab"
    },
    {
      "name": "go_back",
      "description": "Navigate back in browser history"
    },
    {
      "name": "go_forward",
      "description": "Navigate forward in browser history"
    },
    {
      "name": "execute_javascript",
      "description": "Execute JavaScript code in a tab"
    },
    {
      "name": "get_page_content",
      "description": "Get the HTML content of a page"
    },
    {
      "name": "take_screenshot",
      "description": "Take a screenshot of a tab"
    },
    {
      "name": "search_tabs",
      "description": "Search tabs by title or URL"
    },
    {
      "name": "click_element",
      "description": "Click on web elements using CSS selectors"
    },
    {
      "name": "type_text",
      "description": "Type text into input fields using CSS selectors"
    },
    {
      "name": "get_element_text",
      "description": "Extract text content from web elements"
    },
    {
      "name": "element_exists",
      "description": "Check if elements exist and are visible"
    },
    {
      "name": "analyze_form",
      "description": "Analyze a form to discover all input elements and buttons"
    }
  ],
  "user_config": {
    "chrome_port": {
      "title": "Chrome Debug Port",
      "description": "Port for Chrome DevTools Protocol (default: 9222)",
      "type": "number",
      "default": 9222,
      "required": false
    },
    "chrome_path": {
      "title": "Chrome Executable Path",
      "description": "Custom path to Chrome executable",
      "type": "string",
      "required": false
    },
    "auto_launch": {
      "title": "Auto Launch Chrome",
      "description": "Automatically launch Chrome if not running",
      "type": "boolean",
      "default": true,
      "required": false
    },
    "headless": {
      "title": "Headless Mode",
      "description": "Run Chrome in headless mode",
      "type": "boolean",
      "default": false,
      "required": false
    },
    "timeout": {
      "title": "Operation Timeout",
      "description": "Timeout for browser operations in milliseconds",
      "type": "number",
      "default": 30000,
      "min": 1000,
      "max": 120000,
      "required": false
    },
    "isolated_profile": {
      "title": "Use Isolated Profile",
      "description": "Launch Chrome with isolated user profile to avoid conflicts",
      "type": "boolean",
      "default": true,
      "required": false
    },
    "user_data_dir": {
      "title": "Custom User Data Directory",
      "description": "Custom directory for Chrome user data (auto-generated if not specified)",
      "type": "string",
      "required": false
    }
  },
  "compatibility": {
    "claude_desktop": ">=0.10.0",
    "platforms": ["darwin", "win32", "linux"],
    "runtime": {
      "node": ">=18.0.0"
    }
  }
}